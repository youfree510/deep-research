import json
import os

try:
    import google.generativeai as genai
except Exception as e:
    genai = None

def create_ideal_prompt(company_name: str) -> str:
    return f"""
–ó–∞–¥–∞—á–∞: –¢—ã ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ò–ò-–∞–Ω–∞–ª–∏—Ç–∏–∫. –¢–≤–æ—è —Ü–µ–ª—å ‚Äî –Ω–∞–π—Ç–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ –æ—Ç–∑—ã–≤—ã –æ –∫–æ–º–ø–∞–Ω–∏–∏ –∏–ª–∏ —Ç–µ–º–µ, —É–∫–∞–∑–∞–Ω–Ω–æ–π –Ω–∏–∂–µ. –†–∞–±–æ—Ç–∞–π –∞–≤—Ç–æ–Ω–æ–º–Ω–æ, –ø–æ–∫–∞ –Ω–µ —Å–æ–±–µ—Ä–µ—à—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∑—ã–≤–æ–≤ –∏–ª–∏ –Ω–µ —É–±–µ–¥–∏—à—å—Å—è, —á—Ç–æ –∏—Ö –±–æ–ª—å—à–µ –Ω–µ—Ç.

–¢–µ–º–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞: {company_name}

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é:
1.  **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ**: –°–æ–±–µ—Ä–∏ –æ—Ç 20 –¥–æ 50 –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤. –ï—Å–ª–∏ –Ω–∞–π–¥–µ—à—å –º–µ–Ω—å—à–µ 20, —Å–æ–±–µ—Ä–∏ –≤—Å–µ, —á—Ç–æ –µ—Å—Ç—å. –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ—à—å –Ω–∏ –æ–¥–Ω–æ–≥–æ, –≤–µ—Ä–Ω–∏ –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫.
2.  **–ê—É—Ç–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—å**: –ò—Å–ø–æ–ª—å–∑—É–π –¢–û–õ–¨–ö–û —Ä–µ–∞–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã —Å –ø—É–±–ª–∏—á–Ω—ã—Ö —Å–∞–π—Ç–æ–≤ (—Ñ–æ—Ä—É–º—ã, –æ—Ç–∑–æ–≤–∏–∫–∏, –±–ª–æ–≥–∏). –ù–ï –ø—Ä–∏–¥—É–º—ã–≤–∞–π —Ç–µ–∫—Å—Ç, –Ω–µ –ø–µ—Ä–µ—Å–∫–∞–∑—ã–≤–∞–π –∏ –Ω–µ –∏–∑–º–µ–Ω—è–π –µ–≥–æ. –°–æ—Ö—Ä–∞–Ω—è–π –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—é –∏ –ø—É–Ω–∫—Ç—É–∞—Ü–∏—é –æ—Ä–∏–≥–∏–Ω–∞–ª–∞.
3.  **–ö—Ä–∏—Ç–µ—Ä–∏–π –Ω–µ–≥–∞—Ç–∏–≤–∞**: –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–º —Å—á–∏—Ç–∞–µ—Ç—Å—è –æ—Ç–∑—ã–≤, –≥–¥–µ –∞–≤—Ç–æ—Ä —è–≤–Ω–æ –≤—ã—Ä–∞–∂–∞–µ—Ç –Ω–µ–¥–æ–≤–æ–ª—å—Å—Ç–≤–æ, –æ–ø–∏—Å—ã–≤–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã, —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ—Ç–µ—Ä–∏, –ø–ª–æ—Ö–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ —É—Å–ª—É–≥ –∏–ª–∏ –æ–±–º–∞–Ω. –ò–≥–Ω–æ—Ä–∏—Ä—É–π –æ—Ç–∑—ã–≤—ã —Å –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–π –∏–ª–∏ –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–π –æ–∫—Ä–∞—Å–∫–æ–π.
4.  **–ò–∑–±–µ–≥–∞–π —Ä–µ–∫–ª–∞–º—ã**: –ù–µ –±–µ—Ä–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å —Å–∞–º–æ–≥–æ —Å–∞–π—Ç–∞ –∫–æ–º–ø–∞–Ω–∏–∏, –∏–∑ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π –∏–ª–∏ –ø—Ä–µ—Å—Å-—Ä–µ–ª–∏–∑–æ–≤.

–ü—Ä–∞–≤–∏–ª–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:
1.  **–§–æ—Ä–º–∞—Ç**: –í–µ—Ä–Ω–∏ –û–î–ò–ù –æ—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON. –ù–∏–∫–∞–∫–æ–≥–æ –¥—Ä—É–≥–æ–≥–æ —Ç–µ–∫—Å—Ç–∞, –æ–±—ä—è—Å–Ω–µ–Ω–∏–π –∏–ª–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π –≤ –æ—Ç–≤–µ—Ç–µ –±—ã—Ç—å –Ω–µ –¥–æ–ª–∂–Ω–æ.
2.  **–°—Ç—Ä—É–∫—Ç—É—Ä–∞ JSON**:
    {{
    "reviews": [
    {{
    "name": "–ò–º—è –∏–ª–∏ –Ω–∏–∫ –∞–≤—Ç–æ—Ä–∞",
    "review": "–ü–æ–ª–Ω—ã–π –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞",
    "city": "–ì–æ—Ä–æ–¥ (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω)",
    "date": "–î–∞—Ç–∞ –æ—Ç–∑—ã–≤–∞ (–≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ)"
    }}
    ],
    "total_count": 0,
    "search_topic": "{company_name}"
    }}
3.  **–ü—É—Å—Ç—ã–µ –ø–æ–ª—è**: –ï—Å–ª–∏ –Ω–∞ —Å–∞–π—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–º—è –∞–≤—Ç–æ—Ä–∞, –≥–æ—Ä–æ–¥ –∏–ª–∏ –¥–∞—Ç–∞, –æ—Å—Ç–∞–≤—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –ø–æ–ª–µ –≤ JSON –∫–∞–∫ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É "". –ü–æ–ª–µ `review` –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤—Å–µ–≥–¥–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ.
"""

def find_negative_reviews_autonomously(company_name: str, model) -> dict:
    print(f"\U0001f916 –ó–∞–ø—É—Å–∫–∞—é –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π –ø–æ–∏—Å–∫ –æ—Ç–∑—ã–≤–æ–≤ –¥–ª—è '{company_name}'...")
    prompt = create_ideal_prompt(company_name)
    safety_settings = {
        "HARM_CATEGORY_HARASSMENT": "BLOCK_NONE",
        "HARM_CATEGORY_HATE_SPEECH": "BLOCK_NONE",
    }
    response = model.generate_content(
        prompt,
        tools=['Google Search'],
        safety_settings=safety_settings,
    )
    print("‚úÖ –ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç...")
    try:
        cleaned_text = response.text.strip().replace('```json', '').replace('```', '')
        data = json.loads(cleaned_text)
        return data
    except (json.JSONDecodeError, AttributeError):
        print("‚ùå –û—à–∏–±–∫–∞: –ú–æ–¥–µ–ª—å –≤–µ—Ä–Ω—É–ª–∞ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π JSON.")
        print("–û—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏:", getattr(response, 'text', ''))
        return {"error": "Failed to parse JSON from model.", "raw_response": getattr(response, 'text', '')}

def main() -> None:
    if genai is None:
        raise SystemExit("google.generativeai is not installed")
    company = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ—Ç–∑—ã–≤–æ–≤: ").strip()
    if not company:
        raise SystemExit("–ù–µ —É–∫–∞–∑–∞–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏")
    model = genai.GenerativeModel(model_name='gemini-1.5-pro-latest')
    results = find_negative_reviews_autonomously(company, model)
    print("\n--- –†–ï–ó–£–õ–¨–¢–ê–¢ –ü–û–ò–°–ö–ê ---")
    print(json.dumps(results, ensure_ascii=False, indent=2))
    file_name = f"reviews_{company.replace(' ', '_').lower()}.json"
    with open(file_name, 'w', encoding='utf-8') as f:
        json.dump(results, f, ensure_ascii=False, indent=4)
    print(f"\nüëç –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: {file_name}")

if __name__ == '__main__':
    main()
